[DEFAULT]
debug = {{ glance.debug }}

use_syslog = false
use_stderr = true
use_forwarded_for = true

{% if security.tls.enabled %}
registry_client_protocol = https
registry_client_ca_file = /opt/ccp/etc/tls/ca.pem
bind_host = 127.0.0.1
{% else %}
bind_host = {{ network_topology["private"]["address"] }}
{% endif %}
bind_port = {{ glance.api_port.cont }}

registry_host = glance-registry
{% if glance.ceph.enable %}
show_image_direct_url = true
{% endif %}

show_multiple_locations = true

[database]
connection = mysql+pymysql://{{ glance.db.username }}:{{ glance.db.password }}@{{ address(service.database) }}/{{ glance.db.name }}
max_retries = -1

[keystone_authtoken]
auth_uri = {{ address('keystone', keystone.public_port, with_scheme=True) }}
auth_url = {{ address('keystone', keystone.admin_port, with_scheme=True) }}
{% if security.tls.enabled %}
cafile = /opt/ccp/etc/tls/ca.pem
{% endif %}
auth_type = password
project_domain_id = default
user_domain_id = default
project_name = service
username = {{ glance.user }}
password = {{ glance.password }}
memcached_servers = {{ address('memcached', memcached.port) }}


[paste_deploy]
flavor = keystone

[glance_store]
{% if glance.ceph.enable %}
stores = http,rbd
default_store = rbd
rbd_store_pool = {{ glance.ceph.pool_name }}
rbd_store_user = {{ glance.ceph.username }}
rbd_store_ceph_conf = /etc/ceph/ceph.conf
{% elif glance.swift.enable %}
stores = http,swift
default_store = swift
swift_store_create_container_on_put = {{ glance.swift.store_create_container_on_put }}
swift_store_region = RegionOne
default_swift_reference = swift
swift_store_container = {{ glance.swift.store_container }}
swift_store_config_file = /etc/glance/glance-swift-store.conf
swift_store_auth_insecure = {{ glance.swift.store_auth_insecure }}
{% else %}
stores = http,file
default_store = file
filesystem_store_datadir = /var/lib/glance/images/
{% endif %}

{% if glance.ceph.enable %}
[image_format]
container_formats = bare
disk_formats = raw
{% endif %}

{% if searchlight is defined and searchlight.services.glance -%}
[oslo_messaging_notifications]
driver = {{ searchlight.notification_driver }}
{%- endif %}


{# rpc config is required for notifications in stable/mitaka #}
{{ oslo_messaging[messaging.backend.rpc]('rpc_config') }}
{{ oslo_messaging[messaging.backend.notifications]('notifications_config') }}
